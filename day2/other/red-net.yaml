---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: red
spec:
  replicas: 1
  selector:
    matchLabels:
      app: red
  template:
    metadata:
      labels:
        app: red
    spec:
      containers:
        - name: snife-c
          image: quay.io/karampok/snife:latest
          imagePullPolicy: Always
          securityContext:
            privileged: true
        - name: server
          image: registry.k8s.io/e2e-test-images/agnhost:2.40
          command:
            - /agnhost
            - netexec
            - --http-port=8080
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          ports:
            - name: http
              containerPort: 8080

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    metallb.universe.tf/address-pool: red
  name: red-svc-local
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local
  allocateLoadBalancerNodePorts: false
  ports:
    - name: http
      port: 6666
      protocol: TCP
      targetPort: 8080
  selector:
    app: red
---
# apiVersion: v1
# kind: Service
# metadata:
#   annotations:
#     metallb.universe.tf/address-pool: red
#   name: red-svc-cluster
# spec:
#   type: LoadBalancer
#   externalTrafficPolicy: Cluster
#   ports:
#     - name: http
#       port: 80
#       protocol: TCP
#       targetPort: 8080
#   selector:
#     app: red
#
# show bgp vrf red ipv4 summary
# from red
# alias urlencode="python3 -c \"import sys, urllib.parse; print(urllib.parse.quote(''.join(sys.stdin.readlines())))\""
# curl -s http://6.6.6.1/shell?cmd="$(echo "env|grep -i node" | urlencode)"|jq -r '.output'
